{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","userWithProperty","property","value","usersFromServer","find","userWithTodo","userId","getTodos","App","useState","setTodos","userError","setUserError","titleError","setTitleError","setTitle","userSelected","setUserSelected","action","method","onSubmit","event","preventDefault","currentUser","selectedUser","Math","max","getTodo","current","type","placeholder","onChange","filteredInput","target","replace","test","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9992d8b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst userWithProperty = (property: keyof User, value: string | number) => {\n  return usersFromServer.find(user => user[property] === value) || null;\n};\n\nconst userWithTodo = (todo: Todo) => {\n  return userWithProperty('id', todo.userId);\n};\n\nconst getTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: userWithTodo(todo),\n}));\n\nconst getTodo = (\n  selectedUser: User,\n  title: string,\n  todos: Todo[],\n): Todo => {\n  const lastId = Math.max(...todos.map(todo => todo.id));\n\n  return ({\n    id: lastId + 1,\n    title,\n    completed: false,\n    userId: selectedUser.id,\n    user: selectedUser,\n  });\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(getTodos);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userSelected, setUserSelected] = useState('0');\n\n  const handleInputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n    const filteredInput = input.replace(/[^A-Za-zА-Яа-я0-9\\s]/g, '');\n\n    setTitle(/^\\s*$/.test(filteredInput)\n      ? ''\n      : filteredInput);\n\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelected(event.target.value);\n\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserSelected('0');\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const currentUser = userWithProperty('name', userSelected);\n\n    if (!currentUser) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (currentUser && title) {\n      const todo = getTodo(currentUser, title, getTodos);\n\n      setTodos(current => ([\n        ...current,\n        todo,\n      ]));\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInputTitle}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={userSelected}\n              onChange={handleSelectUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}